
"""doctest for a function that multiplies 2 matrices"""


>>> matrix_mul = __import__('100-matrix_mul').matrix_mul


>>> matrix_mul(1, [[3, 5], [2, 4]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list

>>> matrix_mul([[2, 4], [2, 5]], 'str')
Traceback (most recent call last):
        ...
TypeError: m_b must be a list

>>> matrix_mul([12, 3], [[2, 4], [1, 6]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list of lists

>>> matrix_mul([[0, 4], [3, 8]], [6, 9])
Traceback (most recent call last):
        ...
TypeError: m_b must be a list of lists

>>> matrix_mul([[]], [[2, 4], [2, 5]])
Traceback (most recent call last):
	...
ValueError: m_a can't be empty

>>> matrix_mul([[2, 21], [3, 3]], [[]])
Traceback (most recent call last):
        ...
ValueError: m_b can't be empty

>> matrix_mul([[2, 'as'], [3, 4]], [[2, 9], [3, 5]])
Traceback (most recent call last):
        ...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[2, 3], [0.5, 5]], [['str', 3], [23, 'is']])
Traceback (most recent call last):
        ...
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[2, 2, 3], [2, 3]], [[2, 0], [2, 8]])
Traceback (most recent call last):
        ...
TypeError: each row of m_a must be of the same size

>>> marix_mul([[2, 4], [2, 2]], [[2, 0, 45], [2, 4]])
Traceback (most recent call last):
        ...
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 1], [2, 4]], [[23, 4], [3, 7], [9, 0]])
Traceback (most recent call last):
        ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [1, 1]], [[2, 0], [3, 2]])
[[8, 4], [5, 2]]
